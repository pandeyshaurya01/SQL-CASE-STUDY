SWIGGY CASE STUDY
1. Find customers who have never ordered?
Select name 
from 
users
where user_id Not in
(select user_id from orders);

2.  Average Price/dish?
 select
 f.f_name,avg(price) as avgprice
 from menu as m
 join food as f
 on m.f_id=f.f_id
 group by m.f_id;

3.  Find the top restaurant in terms of the number of orders for a given month?
 #june
 select r.r_name,count(*) as 'month'
 from
 orders as o
 join
 restaurants as r
 on o.r_id=r.r_id
 where 
 MONTHNAME(date) LIKE 'june'
 group by (o.r_id)
 order by count(*) desc;

#may
select r.r_name,count(*) as 'month'
 from
 orders as o
 join
 restaurants as r
 on o.r_id=r.r_id
 where 
 MONTHNAME(date) LIKE 'may'
 group by (o.r_id)
 order by count(*) desc;

#july
select r.r_name,count(*) as 'month'
 from
 orders as o
 join
 restaurants as r
 on o.r_id=r.r_id
 where 
 MONTHNAME(date) LIKE 'july'
 group by (o.r_id)
 order by count(*) desc;

4. restaurants with june monthly sales greater than x for ?
 x=500
 
 select r.r_name,sum(amount) as revenue
 from orders as o
 join
 restaurants as r
 on o.r_id=r.r_id
 where MONTHNAME(date) LIKE 'JUNE'
 Group By o.r_id
 HAVING revenue>500;  

5. Show all orders with order details for a 'Ankit' customer in between june and july?
 
 select o.order_id,r.r_name,f.f_name
 from
 orders as o
 join
 restaurants as r
 on
 r.r_id=o.r_id
 join order_details as od
 on o.order_id=od.order_id
 join
 food as f
 on f.f_id=od.f_id
 where user_id = (select user_id from users where name like 'Ankit')
 AND (date > '2022=06-10' AND date < '2022-07-10');

6. Find restaurants with max repeated customers ?
 select r.r_name, count(*) as 'loyal_customers'
 from (
       select r_id,user_id,count(*) as 'visits'
       from orders
       group by r_id,user_id
       having visits>1
       ) as t
join
restaurants as r
on
r.r_id=t.r_id
group by t.r_id
order by loyal_customers desc limit 1;

7.  Month over month revenue growth of swiggy?

select month,((revenue - prev)/prev)*100 from (
with sales as
  (
    select MONTHNAME(date) as 'month',SUM(amount) as 'revenue'
	from orders
    group by month
    order by MONTH(date)
  )
select month,revenue,LAG(revenue,1) over(order by revenue) as prev from sales
) as t;

8. Customer - favorite food?

WITH temp AS
(
select  o.user_id,od.f_id,count(*) as 'frequency'
from orders as o
join order_details as od
on o.order_id=od.order_id
group by o.user_id,od.f_id
)
select u.name,f.f_name,t1.frequency
from temp as t1
join users as U
on 
u.user_id=t1.user_id
join 
food as f
on
f.f_id=t1.f_id
where t1.frequency = (
select MAX(frequency)
from temp t2
where t2.user_id=t1.user_id
);
